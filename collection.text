Question :1:- What is an Array ??

.1. An array is an indexed collection of fixed no of homogeneous data elements.
***2. The main advantage of array is we can represent huge no of elements by using single variable. So that readability of the code will be improved. **Becoz by using a premetiv data type variable or a object refrence variable can represent only one value object

***Limitations of Object[] array:
1. Arrays are fixed in size that is once we created an array there is no chance of increasing (or) decreasing the size based on our requirement hence to use arrays concept compulsory we should know the size in advance which may not possible always.

2. Arrays can hold only homogeneous data elements.

3)*** But we can resolve this problem by using object type array(Object[]).Beacuse we can insert elements or it's child.

4) Arrays concept is not implemented based on some data structure hence ready-made methods support we can't expect. For every requirement we have to write the code explicitly.

***********5) Arrays can hold both primitives and object types.

********Object type array can hold both Primitives and objects.

Question :2:- What is an Collection ??

.Collection is a group of objects represents as a single entity.

1. Collections are growable in nature that is based on our requirement we can increase (or) decrease the size hence memory point of view collections concept is recommended to use.

2. Collections can hold both homogeneous and heterogeneous objects.

3. Every collection class is implemented based on some standard data structure hence for every requirement ready-made method support is available being a programmer we can use these methods directly without writing the functionality on our own.

**************4) Collections can hold only objects but not
PRIMITIVES.

*** iN C++ also collection i there and it is called as Containers.

Question :3:- What is an Collection framework:??

.The Java collections framework (JCF) is a set of classes and interfaces to represent a group of objects as a single entity.

*** iN C++ also collection framework is there and it is called as STL(Standard Template Library).

.There are 9(Nine) key interfaces of collection framework:

1.Collection(I),2.List(I),3.Set(I),4.SortedSet(I),5.NavigableSet(I),6.Queue(I),7.Map(I),8.SortedMap(I),9.NavigableMap(I)


Collection: 
. In general we can consider collection as root interface of entire collection framework.

.Collection interface defines the most common methods which can be applicable for any collection object.


List:

1. It is the child interface of Collection.
2. If we want to represent a group of individual objects as a single entity where "duplicates are allow and insertion order must be preserved" then we should go for List interface.
3.We can differentiate duplicate objects and we can maintain insertion order by means of index hence "index play very important role in List".
Set:

1. It is the child interface of Collection.
2. If we want to represent a group of individual objects as single entity "where duplicates are not allow and insertion order is not preserved" then we should go for Set interface.

1. It is the child interface of Set.
2. If we want to represent a group of individual objects as single entity "where duplicates are not allow but all objects will be insertion according to some sorting order then we should go for SortedSet.

NavigableSet:
1. It is the child interface of SortedSet.
2. It provides several methods for navigation purposes.



Queue:
1. It is the child interface of Collection.
2. If we want to represent a group of individual objects prior to processing then we should go for queue concept.




QUestion :: What is MAP ?? 

1. Map is not child interface of Collection.
2. If we want to represent a group of objects as key-value pairs then we should go for Map interface.
3. Duplicate keys are not allowed but values can be duplicated.

SortedMap:
1. It is the child interface of Map.
2. If we want to represent a group of objects as key value pairs "according to some sorting order of keys" then we should go for SortedMap.

NavigableMap:
1) It is the child interface of SortedMap and defines several methods for navigation purposes.

QUestion :: What is the difference between Collection and Collections ?
"Collection is an "interface" which can be used to represent a group of objects as a single entity.
Whereas "Collections is an utility class" present in java.util package to define several utility methods for Collection objects.

QUestion :: What is ArrayList ?? 

1.The underlying data structure is resizable array (or) growable array.
2.Duplicate objects are allowed.
3.Insertion order preserved.
4.*****Heterogeneous objects are allowed.(except TreeSet , TreeMap every where heterogenious objects are allowed).
5. **Null insertion is possible.

Constructors:

1) ArrayList a=new ArrayList();
Creates an empty ArrayList object with default initial capacity "10" if ArrayList reaches its max capacity then a new ArrayList object will be created with New capacity=(current capacity*3/2)+1.

2) ArrayList a=new ArrayList(int initialcapacity);
Creates an empty ArrayList object with the specified initial capacity.
3) ArrayList a=new ArrayList(collection c);
Creates an equivalent ArrayList object for the given Collection that is this constructor meant for inter conversation between collection objects. That is to dance between collection objects.

